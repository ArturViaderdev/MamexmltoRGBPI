package mamergbpires;

import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author arturv
 */
public class Frmprincipal extends javax.swing.JFrame {

    /**
     * Creates new form Frmprincipal
     */
    public Frmprincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bmame = new javax.swing.JButton();
        tmame = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        brgbpi = new javax.swing.JButton();
        trgbpi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bprocesar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bmame.setText("...");
        bmame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmameActionPerformed(evt);
            }
        });

        tmame.setName("tmame"); // NOI18N

        jLabel1.setText("Mame.xml");

        brgbpi.setText("...");
        brgbpi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brgbpiActionPerformed(evt);
            }
        });

        trgbpi.setName("trgbpi"); // NOI18N

        jLabel2.setText("Directorio rgbpi");

        bprocesar.setText("Procesar");
        bprocesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bprocesarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(trgbpi, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(tmame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brgbpi)
                    .addComponent(bmame))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(bprocesar)
                .addContainerGap(154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bmame)
                    .addComponent(tmame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trgbpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(brgbpi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bprocesar)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bmameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmameActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "xml", "XML", "xml");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            tmame.setText(chooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_bmameActionPerformed

    private void bprocesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bprocesarActionPerformed
        // TODO add your handling code here:
        String content = null;
        String buscar = "<game name=\"";
        char letra;
        int caracteres = 0;
        String nombrejuego="";
        int estado = 0;
        int operacion =0;
        String altura="";
        String refresco="";
        String rotacion="";
        char orientacion;
        orientacion='H';
        
        try {
             BufferedWriter writer = new BufferedWriter(new FileWriter(trgbpi.getText() + "/mame078_games.txt"));
               
                
            FileReader fr = new FileReader(tmame.getText());

            int i;

            while ((i = fr.read()) != -1) {
                
                
                letra = (char) i;
                if (estado == 0) {
                    if (letra == buscar.charAt(caracteres)) {
                        caracteres++;
                    }
                    else
                    {
                        caracteres=0;
                    }
                    if (caracteres == buscar.length()) {
                        estado=1;
                        if (operacion==0)
                        {
                            nombrejuego="";
                        }
                        else if(operacion ==1)
                        {
                            System.out.println("Display encontrado");
                            estado=0;
                            operacion=2;            
                            buscar="rotate=\"";
                        }
                        else if(operacion==2)
                        {
                            System.out.println("Encontrado rotate.");
                            rotacion ="";
                        }
                        else if(operacion==3)
                        {
                            System.out.println("Encontrado height");
                            altura="";
                        }
                        else if(operacion==4)
                        {
                            System.out.println("Encontrado refresh");
                            refresco ="";     
                        }
                        caracteres=0;
                    }
                }
                else if (estado==1)
                {
                    if(letra!='\"')
                    {
                        if(operacion==0)
                        {
                             nombrejuego = nombrejuego + letra;
                        }
                        else if(operacion==2)
                        {
                            rotacion = rotacion + letra;
                        }
                        else if(operacion==3)
                        {
                            altura = altura + letra;
                        }
                        else if(operacion==4)
                        {
                            refresco=refresco+letra;
                        }
                       
                    }
                    else
                    {
                        if(operacion==0)
                        {
                            System.out.println("Nombre del juego " + nombrejuego);
                            buscar="<display";
                            operacion=1;
                        }
                        else if(operacion==2)
                        {
                            System.out.println("Rotacion - " + rotacion);
                            if(rotacion.equals("0"))
                            {
                                System.out.println("Orientación - Horizontal");
                                 buscar = "height=\"";
                                 orientacion='H';
                            }
                            else
                            {
                                System.out.println("Orientación - Vertical");
                                buscar = "height=\"";
                                orientacion='V';
                            }
                            operacion=3;
                        }
                        else if(operacion==3)
                        {
                            System.out.println("Altura - " + altura);
                            operacion =4;
                            buscar = "refresh=\"";
                        }
                        else if(operacion==4)
                        {
                            System.out.println("Refresco - " + refresco);
                            operacion = 0;
                            buscar="<game name=\"";
                            
                            writer.write(nombrejuego + " 1920 " + altura + " " + refresco + " -4 -27 3 48 192 240 5 15734 mame078_libretro.so " + orientacion +"\n");
                        }          
                        estado=0;            
                    }                
                }
            }
            fr.close();
             
                writer.close();
                System.out.println("Proceso completado.");
        } catch (Exception ex) {

        }


    }//GEN-LAST:event_bprocesarActionPerformed

    private void brgbpiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brgbpiActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser;
        chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Elige un directorio");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            trgbpi.setText(chooser.getSelectedFile().getPath());

        } else {
            System.out.println("No Selection ");
        }
    }//GEN-LAST:event_brgbpiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frmprincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bmame;
    private javax.swing.JButton bprocesar;
    private javax.swing.JButton brgbpi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tmame;
    private javax.swing.JTextField trgbpi;
    // End of variables declaration//GEN-END:variables
}
